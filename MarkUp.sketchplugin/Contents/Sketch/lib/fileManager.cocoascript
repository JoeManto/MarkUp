
var fileManager = {};
//filePath
var newPath;
//Ablity to add data to layers.
var command;
/**
* creates the slected path then creates that
 file and writes to that file with the selectedLayers.
* @param {COSAlertWindow} options
* @param {NSArray} layers
* @param {MSPluginCommand} command
* @return -
*/
fileManager.createFile = function(options,layers,com){
  if(options != null){
    newPath = getDirectoryPath();
    if(newPath) {
      command = com;
      writeToFileForPathAndArray(newPath,layers,com);
    }
  }
};
/**
* Initialized "string" with NSString, looped through data appended that data to "string",
* (important note string must be Initialize as a NSString not a js string)
* Finaly writes to file at path.
* @param {string} path
* @param {NSMutableArray} data
* @return -
*/
function writeToFileForPathAndArray(path,data,com){
   var string = [NSString string];
   for(var i = 0;i<=[data count]-1;i++){
     string = [string stringByAppendingString:[NSString stringWithFormat:@"%@\n",[com valueForKey:"0" onLayer:data[i]]]];
   }
   [string writeToFile:path atomically:true
   encoding:NSUTF8StringEncoding error:nil];
}

/**
* Initialize save panel, set properties, runModal on panel,
* @param -
* @return {string} return path URL if save is pressed if not return null.
* @return {null} if save is not pressed.
*/
function getDirectoryPath(){
  var panel = [NSSavePanel savePanel];
  [panel setNameFieldStringValue:"MDExport.md"];
  panel.setCanCreateDirectories(true);
  panel.setAllowedFileTypes(["md"]);
  panel.setCanSelectHiddenExtension(true);
  var save = panel.runModal();
  if (save == NSFileHandlingPanelOKButton){
    return [[panel URL] path];
  }else{
    return null;
  }
}
/**
* data[i] = entry then gets the value set to that layer and returns
  the string data.
* @param - {MSLayer} entry
* @param - {MSPluginCommand} com
* @return {string} return
*/
function addDataEntryForID(entry,com){
    s = 'jjjjjjj';//+[com valueForKey:"0" onLayer:entry];
    return s;
}


//not used
/*
fileManager.appendedFileWithString = function(str){
  var string = readFromFileWithPath(newPath);
  string = [string stringByAppendingString:[NSString stringWithFormat:@"\n%@",str]];
  [string writeToFile:newPath atomically:true
  encoding:NSUTF8StringEncoding error:nil];
}
*/
/*
function readFromFileWithPath(path){
   var str = NSString.stringWithContentsOfFile(path);
   return str;
}
*/
