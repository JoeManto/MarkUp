var layerUtil = {
    /**
    * Makes a basic MSTextLayer and returns it.
    * @param {String} text
    * @param {int} weight
    * @param {int} x
    * @param {int} y
    * @param {int} type
    * @return - {MSTextLayer} layer
    */
    makeTextLayer: function(text,weight,x,y,type){
      var layer = MSTextLayer.alloc().initWithFrame_(NSMakeRect(x, y, 100, 100))
      layer.font = [NSFont fontWithName:@"Arial" size:weight];
      layer.stringValue = text;
      layer.fontPostscriptName = 'GithubText';
      layer.adjustFrameToFit();
      return layer;
    },

}

var stringUtil = {
  /**
  * turns a string into an interger.
  * @param {String} text
  * @return - {NSNumber} myNumber
  * @return - {int} _-1 if the string was not a number.
  */
  NSStringToNSNumber: function(string){
    var nsString = [NSString stringWithFormat:@"%@",string];
    var f = [[NSNumberFormatter alloc] init];
    f.numberStyle = NSNumberFormatterDecimalStyle;
    var myNumber = [f numberFromString:[NSString stringWithFormat:@"%@",nsString]];
    if(myNumber != null){
      myNumber = [myNumber intValue];
      return myNumber;
    }else{
      return -1;
    }
  },
  /**
  * tells if a NSTextField is filled with anything but spaces
  * @param {String} s
  * @return - {Boolean} true if textField contains letters.
  * @return - {Boolean} false if textField has nothing but spaces
  */
  isFieldFilled: function(s){
    var length = [s length];
    if(length == 0)return false;
    for(var i = 0;i<=length-1;i++){
        log([s characterAtIndex:i]);
        if([s characterAtIndex:i] < 128 && [s characterAtIndex:i] != 32){
             return true;
        }
    }
  },
}
