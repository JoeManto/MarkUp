@import 'script.cocoascript'

function onRun(context) {
  var doc = context.document;
  var command = context.command;
  //holds the text layer value.
  var text;
  //holds the text size value.
  var textWeight;
  //Makes alert box
  var alert = makeAlert();
  //Data on what you pressed in alert box and runs alert.
  var options = handleAlertResponse(alert, alert.runModal());
  //if user press "ok" and not "cancel"
  if(options != null){
    //seting global values
    text = options.textValue;
    textWeight = textWeightForHeader(options.headerValue);
    //making the text layer.
    var layer = makeTextLayer();
    //adding item to data to export later.
    [command setValue:mdFormatFor(textWeight,text) forKey:"0" onLayer:layer];
  }
  /**
  * This function creates a text Layer based on the textWeight and centers the
  * view on the layer.
  * @param -
  * @param -
  * @return {MSTextLayer} layer
  */
  function makeTextLayer(){
      var groupArray = [[NSMutableArray alloc]init];
      var page = [doc currentPage];
      var Textlayer = MSTextLayer.alloc().initWithFrame_(NSMakeRect(0, 0, 100, 100))
      if(textWeight != 15){
        Textlayer.font = [NSFont fontWithName:@"Arial Bold" size:textWeight];
      }else{
        Textlayer.font = [NSFont fontWithName:@"Arial" size:textWeight];
      }
      Textlayer.stringValue = text;
      Textlayer.fontPostscriptName = 'GithubText'
      Textlayer.adjustFrameToFit()
      Textlayer.identifer = '0';
      doc.currentView().centerRect_(Textlayer.rect())
      [groupArray addObject:Textlayer];
      if(textWeight == 30 || textWeight == 23){
        var rect = MSRectangleShape.alloc().init();
        rect.frame = MSRect.rectWithRect(NSMakeRect(0, 40, 640, 1));
        var shapeGroup = MSShapeGroup.shapeWithPath(rect);
        shapeGroup.style().addStylePartOfType(0);
        fill = shapeGroup.style().fills().firstObject();
        fill.color = MSColor.colorWithRed_green_blue_alpha(214/255,214/255,214/255,1.0)
        [groupArray addObject:shapeGroup];
      }
      var group = MSLayerGroup.alloc().init();
      [group addLayers:groupArray];
      [group setName:'GitHubText-Layer']
      [group setIsLocked:false];
      page.addLayers_([group]);
      return Textlayer;
  };

  /**
  * This function takes the string headerValue and converts it to a number;
  * @param - {string} options.headerValue
  * @param -
  * @return {int} textWeight
  */
  function textWeightForHeader(string){
    if(string == 'Plain Text'){
      return 15;
    }else if (string == 'h1-html'){
      return 30;
    }else if (string == 'h2-html'){
      return 23;
    }else if (string == 'h3-html'){
      return 20;
    }else if (string == 'h4-html'){
      return 17;
    }else if (string == 'h5-html'){
      return 14;
    }else if (string == 'h6-html'){
      return 13;
    }
  }

  function githubHeaderValueForWeight(weight){
    if(weight == 8 ){
      return '';
    }else if(weight == 11){
      return '#';
    }else if(weight == 14){
      return '##';
    }else if(weight == 17){
      return '###';
    }else if(weight == 20){
      return '####';
    }else if(weight == 23){
      return '#####';
    }else if(weight == 26){
      return '######';
    }
  }

  function mdFormatFor(w,t){
    var s = '';
    s = githubHeaderValueForWeight(w)+t;
    return s;
  }

  /**
  * Made a new COSAlertWindow and set properties.
  * @param -
  * @param -
  * @return {COSAlertWindow} alert
  */
  function makeAlert(){
    var alert = COSAlertWindow.new();
    alert.setMessageText('GitHubTextLayer');
    alert.setInformativeText('Add data to your Text Layer');
    var headerSelectorOptions = ['h1-html','h2-html','h3-html','h4-html','h5-html','h6-html','Plain Text'];
    var Selection = createSelectionBox(headerSelectorOptions, 6);
    alert.addAccessoryView(Selection);
    alert.addTextFieldWithValue('Text Value');
    alert.addButtonWithTitle('Make');
    alert.addButtonWithTitle('Cancel');
    return alert;
  }

  /**
  * Used for global var options. handles the data in makeAlert()
  * Data like Was "export hit" or "Cancel"
  * @param - {COSAlertWindow} alert
  * @param - {string} code
  * @return {-} -
  * @return {null} basicly if 'cancel is pressed' options becomes null that this point
  */
  function handleAlertResponse(alert, code) {
    if (code == "1000") {
      return {
        headerValue: alert.viewAtIndex(0).stringValue(),
        textValue:alert.viewAtIndex(1).stringValue(),
      };
    }
    return null;
  }

  /**
  * This function creates the selection box to choose from.
  * @param - {indexValue} selectedItemIndex
  * @param - {options} options
  * @return {-} -
  * @return {NSComboBox}
  */
  function createSelectionBox(options, selectedItemIndex) {
    var selectBox = NSComboBox.alloc().initWithFrame(NSMakeRect(0,0,200,25));
    selectBox.addItemsWithObjectValues(options);
    selectBox.selectItemAtIndex(selectedItemIndex);
    return selectBox;
  };

};
